 <main className="h-[91vh] md:px-0 px-4 relative mx-auto">
      <div className="w-full max-w-2xl mx-auto">
        <div className="py-4 flex flex-col justify-between h-full">
          <div className="flex flex-col space-y-4 max-h-[85vh] overflow-y-auto scrollbar-thin scrollbar-thumb-slate-800 py-4 px-2">
            <div className="flex items-center justify-end text-overflow: ellipsis">
              <div className="bg-black p-2 text-white rounded-2xl shadow-sm">
                {prevMessage && sent ? (
                  prevMessage
                ) : (
                  <div className="flex">
                    <DotIcon className="animate-pulse" />
                    <DotIcon className="animate-pulse" />
                    <DotIcon />
                  </div>
                )}
              </div>
            </div>
            <div className="flex items-center justify-start">
              <div className="p-2 text-black bg-slate-50 shadow-sm rounded-2xl transition-all duration-300 ease-in-out">
                {reply ? (
                  <Markdown
                    className="flex flex-col gap-4 leading-relaxed"
                    children={reply}
                    components={{
                      code(props) {
                        const { children, className, node, ...rest } = props;
                        const match = /language-(\w+)/.exec(className || "");
                        return match ? (
                          <SyntaxHighlighter
                            className="rounded-xl"
                            {...rest}
                            PreTag="div"
                            children={String(children).replace(/\n$/, "")}
                            language={match[1]}
                            style={dark}
                          />
                        ) : (
                          <code {...rest} className={className}>
                            {children}
                          </code>
                        );
                      },
                    }}
                  />
                ) : (
                  <div className="flex items-center space-x-1">
                    <h2>Hearing you</h2>
                    <h2 className="animate-bounce">ğŸ‘€</h2>
                  </div>
                )}
              </div>
            </div>
          </div>
          <div className="w-full absolute bottom-3 max-w-2xl mx-auto px-2">
            <div className="flex items-center justify-center relative">
              <input
                className="w-full pl-2 pr-0 mr-6 py-1 text-opacity-70 bg-slate-50 rounded-full !outline-none hover:shadow-[0px_4px_0px_rgba(0,0,0,1)]"
                placeholder="Ask Something!"
                value={message}
                onChange={(e) => {
                  setMessage(e.target.value);
                  setSent(false);
                }}
                onKeyDown={(e) => {
                  if (e.key == "Enter") {
                    sendMessage();
                  }
                }}
              />
              <button
                onClick={sendMessage}
                type="button"
                className="absolute sm:right-0 right-4 bg-corel p-3 rounded-full hover:shadow-[3px_3px_0px_rgba(0,0,0,1)] hover:cursor-pointer hover:rotate-45 transition-all duration-300 ease-in-out"
              >
                <SendHorizontalIcon className="text-white" />
              </button>
            </div>
          </div>
        </div>
      </div>
    </main>